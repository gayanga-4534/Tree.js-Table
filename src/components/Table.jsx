/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 public/models/Table.gltf
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useConfigurator } from '../contexts/ConfiguratorContext'
import * as Three from "three";


export function Table(props) {
    const { nodes, materials } = useGLTF('./models/Table.gltf')
    const { legs, legsColor, tableWidth } = useConfigurator();

useEffect(() => {
    materials.Metal.color = new Three.Color(legsColor);
    materials.Metal.color = new Three.Color(legsColor);
    materials.Wood.color = new Three.Color(legsColor);
    materials.Wood_Dark.color = new Three.Color(legsColor);
  }, [legsColor]);

  const tableWidthScale = tableWidth / 100;
    return (
        <group {...props} dispose={null}>
            <mesh castShadow geometry={nodes.Wood_Table_1_Top.geometry} material={materials.Wood} position={[0, 4.98, 0]} scale={[3, 0.05, tableWidthScale*5]} /> 
             <mesh castShadow geometry={nodes.Wood_Table_1_TopHolder.geometry} material={materials.Wood_Dark} position={[0, 4.77, 0]} scale={[2.75, 0.21, tableWidthScale*5]} />
            {legs === 0 && (
                <>
                    <mesh castShadow geometry={nodes.Wood_Table_1_Leg_1_Back_Left.geometry} material={materials.Wood} position={[-2.4, 2.51, -5.12*tableWidthScale]} scale={[0.27, 2.5, 0.3]} />
                    <mesh castShadow geometry={nodes.Wood_Table_1_Leg_1_Back_Right.geometry} material={materials.Wood} position={[2.37, 2.51, -5.12*tableWidthScale]} scale={[0.27, 2.5, 0.3]} />
                    <mesh castShadow geometry={nodes.Wood_Table_1_Leg_1_Front_Left.geometry} material={materials.Wood} position={[-2.4, 2.51, 5.01 * tableWidthScale]} scale={[0.27, 2.5, 0.3]} />
                    <mesh castShadow geometry={nodes.Wood_Table_1_Leg_1_Front_Right.geometry} material={materials.Wood} position={[2.37, 2.51, 5.01 * tableWidthScale]} scale={[0.27, 2.5, 0.3]} />

                </>
            )}


            {legs === 1 && (
                <>
                  <mesh castShadow geometry={nodes.Wood_Table_1_Legs_2_Bottom.geometry} material={materials.Wood} position={[-0.02, 0.21, 0.32]} scale={[-7.9, -0.67, -13.06]} />
                    <mesh castShadow geometry={nodes.Wood_Table_1_Legs_2_Top.geometry} material={materials.Wood_Dark} position={[-0.02, 2.46, 0.32]} scale={[-5.47, -7.27, -5.47]} />
                </>
            )}


            {legs === 2 && (
                <>
                    <mesh castShadow geometry={nodes.Metal_Table_1_Legs_1_Back.geometry} material={materials.Metal} position={[0.01, 0.08, -5.05*tableWidthScale+10.3]} scale={[8.67, 0.26, 1]} />
                    <mesh castShadow geometry={nodes.Metal_Table_1_Legs_1_Front.geometry} material={materials.Metal} position={[0.01, 0.08, 5*tableWidthScale]} scale={[8.67, 0.26, 1]} />
                    <mesh castShadow geometry={nodes.Metal_Table_1_Legs_2_Front.geometry} material={materials.Metal} position={[2.32, 0.09, 0.04]} rotation={[0, -Math.PI / 2, 0]} scale={[8.218*tableWidthScale, 0.26, 1]} />
                    <mesh castShadow geometry={nodes.Metal_Table_1_Legs_2_Front001.geometry} material={materials.Metal} position={[-2.31, 0.09, 0.04]} rotation={[0, -Math.PI / 2, 0]} scale={[8.31*tableWidthScale, 0.26, 1]} />
                </>
            )}

        </group>
    )
}

useGLTF.preload('./models/Table.gltf')
